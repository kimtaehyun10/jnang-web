<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dwict.jfmc.client.rent.mapper.RentMapper">


	<!-- 센터 정보 리스트 -->
	<select id="getCenterList" resultType="java.util.HashMap">
		select
			COMCD,
			COMNM,
			TEL1,
			TEL2,
			FAX,
			ZIPCD,
			ADDR,
			EMAIL
		from
			cominfo
		order by COMCD 
	</select>

	<!-- 대관 장소 -->
	<select id="getCenterPlaceList" resultType="java.util.HashMap">
		
		select
			COMCD ,
			(
			select
				COMNM
			from
				cominfo
			where
				COMCD = t1.COMCD) as COMNM ,
			PLACE_CD,
			PLACE_NM,
			PART_CD,
			RENT_AMT
		from
			rent_place t1
		where
			USE_YN = 'Y'
		order by COMNM , PLACE_CD 	
	</select>



	<!-- 종목별 센터  정보 -->
	<select id="rentGroupList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select
			t1.COMCD,
			t1.PLACE_GROUP,
			t2.COMNM
		from
			rent_place t1
		left join cominfo t2 on
			t1.COMCD = t2.COMCD
		where
			t1.USE_YN = 1
		<if test='PLACE_GROUP !="all" and PLACE_GROUP != null'> 
			AND t1.PLACE_GROUP = #{PLACE_GROUP}
		</if>
		group by
			t1.COMCD,
			t1.PLACE_GROUP,
			t2.COMNM
		order by
			t1.COMCD
	</select>
	
	
	<!-- 종목별 센터  리스트 -->
	<select id="rentList" parameterType="java.util.HashMap" resultType="java.util.HashMap">

		 select t1.COMCD
			, t2.COMNM 
			, t1.PLACE_CD
			, t1.PLACE_GROUP
			, t1.PLACE_NM
			, t1.PART_CD
			, t1.TIME_UNIT
			, CASE t1.PLACE_GROUP
				WHEN 4 then t1.RENT_AMT*2
				ELSE t1.RENT_AMT
			END AS RENT_AMT
			, t1.info_url
			, t1.USE_YN
		FROM rent_place t1 left join cominfo t2 on t1.COMCD = t2.COMCD 
		 WHERE t1.USE_YN=1
		<if test='PLACE_GROUP !="all" and PLACE_GROUP != null'> 
			AND t1.PLACE_GROUP = #{PLACE_GROUP}
		</if>
		<if test='COMCD !="all" and COMCD != null'> 
			AND t1.COMCD = #{COMCD}
		</if>
		Order by t1.COMCD 
	</select>
		
	
	<select id="rentSportsRentList" resultType="java.util.HashMap">
		 SELECT
			DISTINCT
			(
				SELECT
					COMNM
				FROM
					COMINFO
				WHERE
					COMCD = T1.COMCD) AS COMNM
				
            , t1.*
			
		FROM
			RENT_PLACE T1
		WHERE
			USE_YN = 1;
	</select>

	<!-- 대관 환경설정값 -->
	<select id="rentConfig" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select
			COMCD,
			(
				select
					COMNM
				from
					cominfo
				where
					COMCD = t1.COMCD) as COMNM ,			
			PLACE_CD,
			PLACE_GROUP,
			CASE PLACE_GROUP
				when 4 then '2'
				else '1'
			end as groupType,
			PLACE_NM,
			PART_CD,
			TIME_UNIT,
			RENT_AMT,
			info_url,
			USE_YN,
			other_cfg
		from
			rent_place t1
		where
			USE_YN = 1
			and PLACE_CD = #{PLACE_CD}
	</select>
	

	<!-- 팀명 저장 -->
	<insert id="teamSave" parameterType="java.util.HashMap" >
		INSERT INTO  rent_team  ( mem_id, sp_type, tm_type, tm_nm, wdate, ATTACH_ID ) 
		VALUES ( #{mem_id} , #{sp_type}, #{tm_type},  #{tm_nm}, now(), #{ATTACH_ID}	);
	</insert>
	
	<update id="updateRentApp" parameterType="java.util.HashMap" >
		UPDATE RENT_APP
		SET APP_TYPE = '10'
		WHERE APP_TYPE = '5'
		AND RESERVE_DATE = #{reserveDate}
		AND PLACE_TIME_SEQ IN
		<foreach item="item" collection="brdNoList" index="index" open="(" close=")" separator=",">
	       #{item}
		</foreach> 
	</update>
	<!-- 팀명 수정 -->
	<update id="teamUpdate" parameterType="java.util.HashMap" >
		UPDATE rent_team  SET 
			 sp_type 	=	 #{sp_type} 
			 ,tm_type 	=	 #{tm_type} 
			 ,tm_nm 	=	 #{tm_nm} 
			 ,wdate 	=	 now()
			 ,confirm_yn = 'S'
		where mem_id = #{mem_id} and seq = #{teamSEQ}
	</update>

	<!-- 팀 회원  선택 삭제 -->
	<delete id="teamMemDel" parameterType="java.util.HashMap" >
	delete
 	from rent_team_mem
 	where  seq IN
		<foreach item="item" collection="brdNoList" index="index" open="(" close=")" separator=",">
	       #{item}
		</foreach> 
		and team_seq =  #{teamSEQ}
	</delete>
	
	
	<!-- 팀회원 저장 -->
	<insert id="teamMemSave" parameterType="java.util.HashMap" >
		<selectKey keyProperty="team_seq" resultType="_int" order="BEFORE"> 
		select seq from rent_team where mem_id= #{mem_id}
			<if test='teamSEQ !="" and teamSEQ != null'> 
				and seq = #{teamSEQ}
			</if>
		   order by seq desc limit 1
		</selectKey>	
		INSERT INTO  rent_team_mem  SET 
			 team_seq 	=	 #{team_seq} 
			 ,mem_nm 	=	 #{mem_nm} 
			 ,mem_birth 	=  replace(#{mem_birth},'-','')
			 ,mem_addr 	=	 #{mem_addr} 
			 ,mem_addr2 	=	 #{mem_addr2} 
		 
		ON DUPLICATE 
		 KEY UPDATE 
			 team_seq 	=	 #{team_seq} 
			 ,mem_nm 	=	 #{mem_nm} 
			 ,mem_birth 	= replace(#{mem_birth},'-','')
			 ,mem_addr 	=	 #{mem_addr} 
			 ,mem_addr2 	=	 #{mem_addr2} 	
	</insert>


	<!-- 팀리스트 정보  -->
	<select id="getTeamList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT seq, mem_id, sp_type
			,case (sp_type)
				when '1' then '체육관'
				when '2' then '축구장'
				when '3' then '야구장'
				when '4' then '테니스장'
			end as sp_typeNm
		, tm_type, tm_nm, confirm_yn, wdate, ATTACH_ID
		FROM rent_team
		WHERE mem_id = #{MEM_ID} 
		order by sp_type, tm_nm
	</select>
	
	<!-- 나의 팀 정보 -->
	<select id="getMyTeamList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT SEQ
			   , MEM_ID
			   , SP_TYPE
			   , TM_TYPE
			   , TM_NM
			   , CONFIRM_YN
			   , WDATE
		FROM
			RENT_TEAM
		WHERE
			MEM_ID = #{MEM_ID}
		AND SP_TYPE = #{PLACE_GROUP}
		AND CONFIRM_YN = 'Y';
	</select>


	<!-- 선택팀 정보  -->
	<select id="getTeamData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT seq, mem_id, sp_type, tm_type, tm_nm, confirm_yn
		,case (confirm_yn)
			when 'Y' then '승인완료'
			when 'S' then '승인대기'
			when 'N' then '승인거절'
		end as confirm_NM
		, wdate, ATTACH_ID
		FROM rent_team
		WHERE mem_id = #{MEM_ID}  AND seq = #{SEQ}
	</select>
	
	<!-- 팀 회원 리스트 -->
	<select id="getTeamMemberList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select 
			seq, team_seq, mem_nm, mem_birth, mem_addr, mem_addr2
		from rent_team_mem 
		where team_seq = (select seq from rent_team where mem_id = #{MEM_ID}  AND seq = #{SEQ} )
 		order by mem_nm, mem_birth
	</select>

	<!-- 팀 회원수 -->
	<select id="teamCount" parameterType="java.util.HashMap" resultType="int">
		SELECT COUNT(*) 
		FROM RENT_TEAM TEAM
		JOIN RENT_TEAM_MEM MEM
		ON TEAM.SEQ = MEM.TEAM_SEQ
		WHERE TEAM.MEM_ID = #{MEM_ID} 
		AND TEAM.SP_TYPE = #{PLACE_GROUP};
		<!-- SELECT COUNT(*) 
		FROM RENT_TEAM_MEM 
		WHERE TEAM_SEQ = (SELECT SEQ FROM RENT_TEAM WHERE MEM_ID =#{MEM_ID}) -->
	</select>	

	<!-- 예약 중복 접수 첵크 -->
	<select id="rentDblchk" parameterType="java.util.HashMap" resultType="int">
		select
			count(*)
		from
			rent_app
		where
			RESERVE_DATE = #{RESERVE_DATE}
			and PLACE_CD = #{PLACE_CD}
			and PLACE_TIME_SEQ = #{TIME_SEQ}
			and APP_TYPE != 40
	</select>
	
	<!-- 대관문의 등록 -->
	<insert id="rentWriteSave" parameterType="java.util.HashMap">
		INSERT INTO  other_board  ( 
			 brd_no 
			 ,name 
			 ,id 
			 ,tel
			 ,mail 
			 ,title 
			 ,content 
			 ,wdate 
			 ,int_x
			 ,var_x
			 ,var_y
		 ) VALUES ( 
			 1
			 ,#{name} 
			 ,#{id} 
			 ,#{tel}
			 ,#{mail} 
			 ,#{title} 
			 ,#{content} 
			 ,now() 
			 ,#{RENT_DATE}
			 ,#{q}
			 ,concat(#{STIME},':00~',#{ETIME},':00')
			 
		);
	</insert>
	
	
	<!-- 예약등록 -->
	<insert id="rentSave" parameterType="java.util.HashMap">
		INSERT INTO  rent_app ( 
			  COMCD 
 			 ,RENT 
			 ,PART_CD 
			 ,PLACE_CD 
			 ,PLACE_TIME_SEQ
			 ,APP_DATE 
			 ,MEM_NO 
			 ,BOSSNM 
			 ,BIZNO 
			 ,COM_NM 
			 ,PERSON_YN 
			 ,TEL 
			 ,CP 
			 ,FAX 
			 ,ZIPCD 
			 ,ADDR 
			 ,OBJECT 
			 ,INWON 
			 ,SDATE 
			 ,EDATE 
			 ,RENT_READY 
			 ,ETC 
			 ,APP_TYPE 
			 ,RENT_TYPE 
			 ,DISPLAY_YN 
			 ,SALE_AMT 
			 ,PAY_AMT 
			 ,PAY_DATE 
			 ,RESERVE_DATE 
			 ,SLIP_NO 
			 ,OFFLINE_YN 
			 ,OFFLINE_DATE 
			 ,RENT_GUBUN 
			 ,SORT_ORDER 
			 ,CONCEPT 
			 ,DISCOUNT_MSG 
			 ,WRITE_DH 
			 ,WRITER 
			 ,CHNG_DH 
			 ,CHNGR 
			 ,PRODUCT_CNT 
			 ,PRODUCT_SIZE 
			 ,START_DATE
			 ,END_DATE
			 ,ATTACH_ID
			 ,AUTHDATE
		 ) VALUES ( 
			  #{COMCD} 
			 ,#{RENT} 
			 ,#{PART_CD} 
			 ,#{PLACE_CD} 
			 ,#{TIME_SEQ}
			 ,#{APP_DATE} 
			 ,#{MEM_NO} 
			 ,#{MEM_NM} 
			 ,#{BIZNO} 
			 ,#{COM_NM} 
			 ,#{PERSON_YN} 
			 ,#{TEL} 
			 ,#{CP} 
			 ,#{FAX} 
			 ,#{ZIPCD} 
			 ,#{ADDR} 
			 ,#{OBJECT} 
			 ,#{INWON} 
			 ,#{SDATE}
			 ,#{EDATE} 
			 ,#{RENT_READY} 
			 ,#{ETC}
			 <choose>
			 	<when test='APP_TYPE !="" and APP_TYPE != null'>
			 	,#{APP_TYPE}
			 	</when>
			 	<otherwise>
			 	,5
			 	</otherwise>
			 </choose>
			 ,#{RENT_TYPE} 
			 ,#{DISPLAY_YN} 
			 ,0 
			 ,0
			 ,#{PAY_DATE} 
			 ,#{RESERVE_DATE} 
			 ,#{SLIP_NO} 
			 ,'N'
			 ,#{OFFLINE_DATE} 
			 ,#{RENT_GUBUN} 
			 ,#{SORT_ORDER} 
			 ,#{CONCEPT} 
			 ,#{DISCOUNT_MSG} 
			 ,now() 
			 ,#{MEM_NM} 
			 ,now()
			 ,#{MEM_NM} 
			 ,#{PRODUCT_CNT} 
			 ,#{PRODUCT_SIZE}
			 ,#{START_DATE}
			 ,#{END_DATE}   
			 ,#{ATTACH_ID}
			 ,now()
		)
	</insert>

	<!-- 주문결과 확인 -->
	<select id="rentOdList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	
			 select t1.WRITE_DH 
				, t1.PLACE_TIME_SEQ
				, t2.PLACE_GROUP 
				, t3.place_tab 
				, fn_int_to_date(t1.RESERVE_DATE ,'') as RESERVE_DATE 
				, t3.item
				, t1.MEM_NO
				, STRCMP(t1.MEM_NO, #{MEM_NO}) as '비교값'
				, if (STRCMP(t1.MEM_NO, #{MEM_NO}),'N','Y') as orderYN
				, t3.add_light
				,(select case count(*) when 0 then 'N' else 'Y' end from calendar where CAL_DATE = t1.RESERVE_DATE AND GUBUN ='A') as holiday_yn
			from rent_app t1 left join rent_place t2 on t1.PLACE_CD = t2.PLACE_CD 
				left join rent_times t3 on t1.PLACE_CD = t3.place_cd 
			 and t1.PLACE_TIME_SEQ = t3.seq 
			 where t1.RESERVE_DATE = #{RESERVE_DATE}
			 and t1.PLACE_CD = #{PLACE_CD} 
			 and t1.APP_TYPE != 40 
			 <if test='MEM_NO !="" and MEM_NO != null'> 
				AND t1.MEM_NO = #{MEM_NO}
			</if>
			and t1.PLACE_TIME_SEQ IN  
			<foreach item="item" collection="brdNoList" index="idx" open="(" close=")" separator=",">
		       #{item}
			</foreach>
   			
	</select>
	

	<!-- 예약 (결제전) 시간초과  삭제 -->
	<delete id="rentNoPayClear">
	delete
 	from rent_app
 	where  APP_TYPE = 5 and TIMESTAMPDIFF(hour,WRITE_DH, now()) > 1
	</delete>

	<!-- 달력에 표시될 예약가능/ 예약 불가능 -->
	<select id="getRentCalendar" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select 
			up_rent_day_cnt('0',0,8) as tot
			,concat (up_rent_day_cnt(#{YYMM},'01',#{PLACE_CD}),'/'
			,up_rent_day_cnt(#{YYMM},'02',#{PLACE_CD}),'/'
			,up_rent_day_cnt(#{YYMM},'03',#{PLACE_CD}),'/'
			,up_rent_day_cnt(#{YYMM},'04',#{PLACE_CD}),'/'
			,up_rent_day_cnt(#{YYMM},'05',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'06',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'07',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'08',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'09',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'10',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'11',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'12',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'13',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'14',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'15',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'16',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'17',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'18',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'19',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'20',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'21',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'22',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'23',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'24',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'25',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'26',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'27',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'28',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'29',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'30',#{PLACE_CD}),'/' 
			,up_rent_day_cnt(#{YYMM},'31',#{PLACE_CD}),'/') as days
	
	</select>

    <!-- 체육관별 리스트 -->
    <select id="getRentList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    <!-- 
		select
			RENT_IDX
			,(select COMNM from cominfo where COMCD = t1.COMCD) as COMNM
			,(select PLACE_NM from rent_place rp where PART_CD = t1.PART_CD and PLACE_CD = t1.PLACE_CD ) as PLACE_NM
			,COMCD,
			PART_CD,
			PLACE_CD,
			APP_DATE,
			MEM_NO,
			BOSSNM,
			BIZNO,
			COM_NM,
			PERSON_YN,
			TEL,
			CP,
			FAX,
			ZIPCD,
			ADDR,
			OBJECT,
			INWON,
			jnimc.fn_int_to_date(SDATE,'-') as SDATE,
			EDATE,
			RENT_READY,
			RENT,
			ETC,
			APP_TYPE,
			case APP_TYPE
				when '10' then '접수대기'
				when '20' then '확인중'
				when '30' then '확정'
				when '40' then '취소'
			end as APP_TYPE_NM,
			RENT_TYPE,
			DISPLAY_YN,
			FORMAT(SALE_AMT , 0) as SALE_AMT,
			PAY_AMT,
			PAY_DATE,
			RESERVE_DATE,
			SLIP_NO,
			OFFLINE_YN,
			OFFLINE_DATE,
			RENT_GUBUN,
			SORT_ORDER,
			CONCEPT,
			DISCOUNT_MSG,
			WRITE_DH,
			WRITER,
			date_format(CHNG_DH, '%Y-%m-%d') as CHNG_DH ,
			CHNGR,
			PRODUCT_CNT,
			PRODUCT_SIZE
		from
			jnimc.rent_app t1
			
		where length(SDATE) > 6
		
		AND COMCD = #{cmsCd}
		AND left(SDATE,6) = #{YYMM}
		
		order by SDATE
 	-->
		select
			t1.seq,
			t1.place_cd,
			t1.place_tab,
			t2.PLACE_NM ,
			t1.item,
			ifnull(t3.RENT_IDX,
			0) as rentIdx,
			ifnull(t3.RESERVE_DATE,0) as RESERVE_DATE,
			case t3.APP_TYPE
				when '5' then '결제 대기'
				when '10' then '접수대기'
				when '20' then '확인중'
				when '30' then '확정'
				when '40' then '취소'
				when '50' then '환불신청중'
			end as APP_TYPE_NM,
			ifnull(t3.BOSSNM,'') as BOSSNM
		from
			rent_times t1
		left join rent_place t2 on
			t1.place_cd = t2.PLACE_CD
		left join rent_app t3 on
			t1.place_cd = t3.PLACE_CD

			<if test='YYMM !="" and YYMM != null'>
				and left(t3.RESERVE_DATE, 6) = #{YYMM}
			</if>
			<if test='YYMMDD !="" and YYMMDD != null'>
				and t3.RESERVE_DATE = #{YYMMDD}
			</if>
			<if test='PLACE_TAB !="0" and PLACE_TAB !="" and PLACE_TAB != null'>
				and t3.PLACE_TAB = #{PLACE_TAB}
			</if>
			and t1.seq = t3.PLACE_TIME_SEQ
			
			and t3.APP_TYPE != 40
		where
			t2.PLACE_CD = #{PLACE_CD}
			and t1.use_yn =1
		order by
			t1.place_tab,
			t1.sort,
			t1.seq
	</select>
		
	<update id="updateRtnAppType" parameterType="java.lang.Object">
		UPDATE RENT_APP
        SET APP_TYPE = '40'
        <![CDATA[
        	WHERE WRITE_DH < (SELECT DATE_ADD(NOW(), INTERVAL -3 HOUR))
        ]]>
		AND APP_TYPE = '5'
		AND COMCD IN ('JUNGNANG08','JUNGNANG09','JUNGNANG10', 'JUNGNANG18');
	</update>
	
	<update id="updateTennisAppType" parameterType="java.lang.Object">
		UPDATE RENT_APP
        SET APP_TYPE = '40'
        <![CDATA[
        	WHERE WRITE_DH < (SELECT DATE_ADD(NOW(), INTERVAL -1 HOUR))
        ]]>
		AND APP_TYPE = '5'
		AND COMCD IN ('JUNGNANG07','JUNGNANG11');
	</update>
	
	<!-- 달력 탭별 예약 항목리스트  -->	
	<select id="getCenterGroup" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select COMCD ,PLACE_CD , PLACE_NM ,PLACE_GROUP from rent_place 
		where COMCD = (select COMCD from rent_place where PLACE_CD = #{PLACE_CD})
 	</select>
	
	<!-- 달력 탭별 예약 항목리스트  -->	
	<select id="getPlaceTimeTabList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select 
			seq, place_cd , place_tab , item  
		from rent_times t1 
		where  place_cd = #{place_cd} and place_tab = #{place_tab} 
			and use_yn =1 order by sort
 	</select>



	<!-- 달력 탭별 예약현황  -->	
	<select id="getPlaceCalendarTab" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		 <choose>
		 	<!-- 게시판 문의 예약 용 -->
		 	<when test='RB !="" and RB != null'>
				 select t1.RENT_IDX 
					, t1.PLACE_TIME_SEQ 
					, SDATE , EDATE 
					, t1.PLACE_CD 
					, t1.RESERVE_DATE 
					, t1.APP_TYPE 
					,case t1.APP_TYPE
						when '5' then '결제대기'
						when '10' then '접수대기'
						when '20' then '확인중'
						when '30' then '확정'
						when '40' then '취소'
						when '50' then '환불신청중'
					end as APP_TYPE_NM
					from rent_app t1 
				 where t1.PLACE_CD = #{PLACE_CD}
				 <if test='YYMM !="" and YYMM != null'> 
				 	and left(t1.RESERVE_DATE , 6) = #{YYMM} 
				 </if>
				 <if test='YYMMDD !="" and YYMMDD != null'> 
				 	and t1.RESERVE_DATE = #{YYMMDD} 
				 </if>
				 order by SDATE
				 		 	
		 	</when>
		 	<!--   축구장,야구장,테니스장 용 -->
		 	<otherwise>
				select t1.RENT_IDX 
					, t1.PLACE_TIME_SEQ 
					, t1.PLACE_CD 
					, t1.RESERVE_DATE 
					, t2.place_tab 
				from rent_app t1 left join rent_times t2 on t1.PLACE_TIME_SEQ =t2.seq and t1.PLACE_CD = t2.place_cd 
				where left(t1.RESERVE_DATE , 6) =  #{YYMM} 
					and t1.APP_TYPE != 40 
					and t1.PLACE_CD = #{PLACE_CD}
					<if test='PLACE_TAB !="0" and PLACE_TAB !="" and PLACE_TAB != null'>
						and t2.PLACE_TAB = #{PLACE_TAB}
					</if>	
				order by t1.RESERVE_DATE , t1.PLACE_TIME_SEQ 
				
		 	</otherwise>
		 </choose>
		 	

 	</select>


	<!-- 축구장 /야구장 단가표 -->
	<select id="rentPriceList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		
		SELECT 
			DAYS, PLAYTIME, PRICE ,IN_AREA, PERSON
		FROM RENT_PRICE 
		WHERE PRICE_TYPE = 2
		<if test='in_area !="" and in_area != null'>
			AND IN_AREA = #{in_area}
		</if>
		<if test='days !="" and days != null'>
			AND DAYS = #{days}
		</if>
		<if test='playtime !="" and playtime != null and playtime != 0'>
			AND PLAYTIME = #{playtime}
		</if>
		<!--  AND IN_AREA = #{IN_AREA} -->
		<!-- <if test="PERSON != null AND PERSON != ''">
			AND PERSON = #{PERSON}
		</if> -->
			<!-- <if test='DAYS !="" AND DAYS != NULL'> 
				AND DAYS = #{DAYS}
			</if> -->
			AND USE_YN =1
	 	ORDER BY DAYS,PLAYTIME
 
	</select>

	<select id="teamCnt" parameterType="java.util.HashMap" resultType="int">
	  		SELECT COUNT(*)
            FROM RENT_TEAM
            WHERE SP_TYPE= #{sp_type}
            AND MEM_ID = #{mem_id};
	</select>
	
	<insert id="rentCancelSave" parameterType="java.util.HashMap" >
		INSERT INTO  RENT_APP_CANCEL (
			COMCD
			, PLACE_CD
			, PLACE_TIME_SEQ
			, MEM_NO
			, MEM_NM
			, TID
			, WRITE_DH
			, CANCEL_DH
			, ATTACH_ID
			, PAY_AMT
			, TEL
			, RESERVE_DATE
			, CONCEPT
			, OBJECT
			, CONFIRM_YN
		) VALUES (
			#{COMCD}
			, #{PLACE_CD}
			, #{PLACE_TIME_SEQ}
			, #{MEM_NO}
			, #{MEM_NM}
			, #{TID}
			, #{WRITE_DH}
			, now()  
			, #{ATTACH_ID}
			, #{PAY_AMT}
			, #{TEL}
			, #{RESERVE_DATE}
			, #{CONCEPT}
			, #{OBJECT}
			, 'S'
		)
	</insert>
	<update id="cancelAppType" parameterType="java.util.HashMap" >
		UPDATE RENT_APP
		SET APP_TYPE = '50'
		WHERE TID = #{TID}
	</update>
	
</mapper>